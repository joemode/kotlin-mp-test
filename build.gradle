plugins {
    id 'kotlin-multiplatform' version '1.3.10'
}
repositories {
    mavenCentral()
    jcenter()
    google()
}
group 'com.example.mptest'
version '0.0.1'

apply plugin: 'maven-publish'

def artifactId = 'mptest'
def groupId = 'com.example.mptest'

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.mingwX64, 'mingw')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation 'io.ktor:ktor-client-core:1.1.2'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation 'io.ktor:ktor-client-android:1.1.2'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        mingwMain {
            dependencies {
                implementation 'io.ktor:ktor-client-ios:1.1.2'
            }
        }
        mingwTest {
        }
    }
}

//publishing {
//    publications {
//        library(MavenPublication) {
//            setGroupId(groupId)
//            setArtifactId(artifactId)
//            version version
//
//            artifact(bundleRelease)
//        }
//    }
//}